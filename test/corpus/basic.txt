================================================================================
Integers / decimal
================================================================================

1234
-123
0
#d1234
#d-123
#d0

--------------------------------------------------------------------------------

(source
  (integer)
  (integer)
  (integer)
  (integer)
  (integer)
  (integer))

================================================================================
Integers / binary
================================================================================

#b0
#b10101
#b-1100
#*0
#*10101
#*-1100

--------------------------------------------------------------------------------

(source
  (integer)
  (integer)
  (integer)
  (integer)
  (integer)
  (integer))

================================================================================
Integers / octal
================================================================================

#o377
#o-111

--------------------------------------------------------------------------------

(source
  (integer)
  (integer))

================================================================================
Integers / hexadecimal
================================================================================

#xc0ffe
#x-01

--------------------------------------------------------------------------------

(source
  (integer)
  (integer))

================================================================================
Integers / explicit base
================================================================================

#2r1010
#8r377
#36rhelloworld

--------------------------------------------------------------------------------

(source
  (integer)
  (integer)
  (integer))

================================================================================
Characters
================================================================================

#\a
#\$
#\ä
#\x1f42d;

--------------------------------------------------------------------------------

(source
  (character)
  (character)
  (character)
  (character))

================================================================================
Floats
================================================================================

1.0
+1.0
-1.0
1.0e10
1.111e-10

--------------------------------------------------------------------------------

(source
  (float)
  (float)
  (float)
  (float)
  (float))

================================================================================
List strings
================================================================================

"abc"
"a\"bc"
"\x61;\x62;\x63;"

--------------------------------------------------------------------------------

(source
  (list_string)
  (list_string)
  (list_string))

================================================================================
Binaries
================================================================================

#"a"
#B("a")
#B(97)
#B(42 (42 (size 16)) (42 (size 32)))
#B(-42 111 (-42 (size 16)) 111 (-42 (size 32)))
#B((42 (size 32) big-endian) (42 (size 32) little-endian))
#B((1.23 float) (1.23 (size 32) float) (1.23 (size 64) float))
#B((#"a" binary) (#"b" binary))

--------------------------------------------------------------------------------

(source
  (binary
    (binary_string))
  (binary
    (binary_segment
      (list_string)))
  (binary
    (binary_segment
      (integer)))
  (binary
    (binary_segment
      (integer))
    (binary_segment
      (integer)
      (binary_size
        (integer)))
    (binary_segment
      (integer)
      (binary_size
        (integer))))
  (binary
    (binary_segment
      (integer))
    (binary_segment
      (integer))
    (binary_segment
      (integer)
      (binary_size
        (integer)))
    (binary_segment
      (integer))
    (binary_segment
      (integer)
      (binary_size
        (integer))))
  (binary
    (binary_segment
      (integer)
      (binary_size
        (integer))
      (binary_endianess))
    (binary_segment
      (integer)
      (binary_size
        (integer))
      (binary_endianess)))
  (binary
    (binary_segment
      (float)
      (binary_type))
    (binary_segment
      (float)
      (binary_size
        (integer))
      (binary_type))
    (binary_segment
      (float)
      (binary_size
        (integer))
      (binary_type)))
  (binary
    (binary_segment
      (binary_string)
      (binary_type))
    (binary_segment
      (binary_string)
      (binary_type))))

================================================================================
Symbols / anything not parsed
================================================================================

foo
Foo
foo-bar
:foo
µ#
±1
451°F
123foo
1.23e4extra
'foo
'Foo
'foo-bar
':foo

--------------------------------------------------------------------------------

(source
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol)
  (symbol))

================================================================================
Symbols / delimited by |
================================================================================

||
|symbol name with spaces|
|symbol with a vertical bar \| in its name|

--------------------------------------------------------------------------------

(source
  (delimited_symbol)
  (delimited_symbol)
  (delimited_symbol))

================================================================================
Lists
================================================================================

()
[]
(foo bar baz)
[foo bar baz]
(foo
  bar
  baz)
[foo
  bar
  baz]
(foo
  (bar baz))
[foo
  [bar baz]]
(foo
  [bar baz])
[foo
  (bar baz)]
'()
'[]
'(foo bar baz)
'[foo bar baz]

--------------------------------------------------------------------------------

(source
  (list)
  (list)
  (list
    (symbol)
    (symbol)
    (symbol))
  (list
    (symbol)
    (symbol)
    (symbol))
  (list
    (symbol)
    (symbol)
    (symbol))
  (list
    (symbol)
    (symbol)
    (symbol))
  (list
    (symbol)
    (list
      (symbol)
      (symbol)))
  (list
    (symbol)
    (list
      (symbol)
      (symbol)))
  (list
    (symbol)
    (list
      (symbol)
      (symbol)))
  (list
    (symbol)
    (list
      (symbol)
      (symbol)))
  (list)
  (list)
  (list
    (symbol)
    (symbol)
    (symbol))
  (list
    (symbol)
    (symbol)
    (symbol)))

================================================================================
Tuples
================================================================================

#()
#(foo 1)
#(foo 1 (bar baz))

--------------------------------------------------------------------------------

(source
  (tuple)
  (tuple
    (symbol)
    (integer))
  (tuple
    (symbol)
    (integer)
    (list
      (symbol)
      (symbol))))

================================================================================
Maps
================================================================================

#M()
#M(foo 1)
#M(a 1
   b (bar "baz"))

--------------------------------------------------------------------------------

(source
  (map)
  (map
    (map_pair
      key: (symbol)
      value: (integer)))
  (map
    (map_pair
      key: (symbol)
      value: (integer))
    (map_pair
      key: (symbol)
      value: (list
               (symbol)
               (list_string)))))

================================================================================
Comments
================================================================================

; A single line comment
#| A single line comment #|
#|
A
multiline
comment
#|

--------------------------------------------------------------------------------

(source
  (comment)
  (comment)
  (comment))

